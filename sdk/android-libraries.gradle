apply plugin: 'maven'

def myProject = project

def BINTRAY_USERNAME = "$System.env.BINTRAY_USERNAME"
def BINTRAY_APIKEY = "$System.env.BINTRAY_APIKEY"

def isCI = project.hasProperty('isCI') ? Boolean.valueOf(isCI) : false
def repoUrl = isCI ? "file://" + "$System.env.BUILD_ARTIFACTSTAGINGDIRECTORY" : 'https://api.bintray.com/maven/microsoftazuremobile/SDK/Mobile-Apps-Android'

// step 2
uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = myProject.group
        pom.artifactId = PUBLISH_ARTIFACT_ID
        pom.version = myProject.version
        repository (
            url: repoUrl
        ) {
            authentication(
                userName: BINTRAY_USERNAME,
                password: BINTRAY_APIKEY
            )
        }
    }
}


task clearAar(type: Delete) {
    delete 'build/release/' + PUBLISH_ARTIFACT_ID + '-' + myProject.version + '.aar'
}

// step 1
task makeAar(type: Copy) {
    from('build/outputs/aar/')
    into('build/release/')
    include('sdk-release.aar')
    include('notifications-handler-release.aar')
    rename ('sdk-release.aar', PUBLISH_ARTIFACT_ID + '-' +  myProject.version + '.aar')
    rename ('notifications-handler-release.aar', PUBLISH_ARTIFACT_ID + '-' +  myProject.version + '.aar')
}

makeAar.dependsOn(clearAar, build)

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    //archives androidJavadocsJar
    archives file : file('build/release/' + PUBLISH_ARTIFACT_ID + '-' + myProject.version + '.aar'), type: 'aar', classifier: 'sources'
}